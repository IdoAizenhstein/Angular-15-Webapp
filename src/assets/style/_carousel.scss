/* Importing Bootstrap SCSS file. *///@import 'bootstrap/scss/bootstrap';//@import "bootstrap/scss/variables";//@import "bootstrap/scss/utilities";// Characters which are escaped by the escape-svg function$escaped-characters: (                ("<", "%3c"),                (">", "%3e"),                ("#", "%23"),                ("(", "%28"),                (")", "%29"),) !default;@function str-replace($string, $search, $replace: "") {  $index: str-index($string, $search);  @if $index {    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);  }  @return $string;}@function escape-svg($string) {  @if str-index($string, "data:image/svg+xml") {    @each $char, $encoded in $escaped-characters {      // Do not escape the url brackets      @if str-index($string, "url(") == 1 {        $string: url("#{str-replace(str-slice($string, 6, -3), $char, $encoded)}");      } @else {        $string: str-replace($string, $char, $encoded);      }    }  }  @return $string;}@mixin clearfix() {  &::after {    display: block;    clear: both;    content: "";  }}$enable-gradients:            false !default;// scss-docs-start gray-color-variables$white:    #fff !default;$gray-100: #f8f9fa !default;$gray-200: #e9ecef !default;$gray-300: #dee2e6 !default;$gray-400: #ced4da !default;$gray-500: #adb5bd !default;$gray-600: #6c757d !default;$gray-700: #495057 !default;$gray-800: #343a40 !default;$gray-900: #212529 !default;$black:    #000 !default;// scss-docs-end gray-color-variables// Carousel// scss-docs-start carousel-variables$carousel-control-color:             $white !default;$carousel-control-width:             15% !default;$carousel-control-opacity:           .5 !default;$carousel-control-hover-opacity:     .9 !default;$carousel-control-transition:        opacity .15s ease !default;$carousel-indicator-width:           30px !default;$carousel-indicator-height:          3px !default;$carousel-indicator-hit-area-height: 10px !default;$carousel-indicator-spacer:          3px !default;$carousel-indicator-opacity:         .5 !default;$carousel-indicator-active-bg:       $white !default;$carousel-indicator-active-opacity:  1 !default;$carousel-indicator-transition:      opacity .6s ease !default;$carousel-caption-width:             70% !default;$carousel-caption-color:             $white !default;$carousel-caption-padding-y:         1.25rem !default;$carousel-caption-spacer:            1.25rem !default;$carousel-control-icon-width:        2rem !default;$carousel-control-prev-icon-bg:      url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$carousel-control-color}'><path d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'/></svg>") !default;$carousel-control-next-icon-bg:      url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='#{$carousel-control-color}'><path d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/></svg>") !default;$carousel-transition-duration:       .6s !default;$carousel-transition:                transform $carousel-transition-duration ease-in-out !default; // Define transform transition first if using multiple transitions (e.g., `transform 2s ease, opacity .5s ease-out`)// scss-docs-end carousel-variables// scss-docs-start carousel-dark-variables$carousel-dark-indicator-active-bg:  $black !default;$carousel-dark-caption-color:        $black !default;$carousel-dark-control-icon-filter:  invert(1) grayscale(100) !default;// scss-docs-end carousel-dark-variables$transition-base:             all .2s ease-in-out !default;$transition-fade:             opacity .15s linear !default;// scss-docs-start collapse-transition$transition-collapse:         height .35s ease !default;$transition-collapse-width:   width .35s ease !default;$enable-transitions:          true !default;$enable-reduced-motion:       true !default;// stylelint-disable property-disallowed-list@mixin transition($transition...) {  @if length($transition) == 0 {    $transition: $transition-base;  }  @if length($transition) > 1 {    @each $value in $transition {      @if $value == null or $value == none {        @warn "The keyword 'none' or 'null' must be used as a single argument.";      }    }  }  @if $enable-transitions {    @if nth($transition, 1) != null {      transition: $transition;    }    @if $enable-reduced-motion and nth($transition, 1) != null and nth($transition, 1) != none {      @media (prefers-reduced-motion: reduce) {        transition: none;      }    }  }}// Notes on the classes://// 1. .carousel.pointer-event should ideally be pan-y (to allow for users to scroll vertically)//    even when their scroll action started on a carousel, but for compatibility (with Firefox)//    we're preventing all actions instead// 2. The .carousel-item-start and .carousel-item-end is used to indicate where//    the active slide is heading.// 3. .active.carousel-item is the current slide.// 4. .active.carousel-item-start and .active.carousel-item-end is the current//    slide in its in-transition state. Only one of these occurs at a time.// 5. .carousel-item-next.carousel-item-start and .carousel-item-prev.carousel-item-end//    is the upcoming slide in transition..carousel {  position: relative;}.carousel.pointer-event {  touch-action: pan-y;}.carousel-inner {  position: relative;  width: 100%;  overflow: hidden;  @include clearfix();}.carousel-item {  position: relative;  display: none;  float: left;  width: 100%;  margin-right: -100%;  backface-visibility: hidden;  @include transition($carousel-transition);}.carousel-item.active,.carousel-item-next,.carousel-item-prev {  display: block;}/* rtl:begin:ignore */.carousel-item-next:not(.carousel-item-start),.active.carousel-item-end {  transform: translateX(100%);}.carousel-item-prev:not(.carousel-item-end),.active.carousel-item-start {  transform: translateX(-100%);}/* rtl:end:ignore *///// Alternate transitions//.carousel-fade {  .carousel-item {    opacity: 0;    transition-property: opacity;    transform: none;  }  .carousel-item.active,  .carousel-item-next.carousel-item-start,  .carousel-item-prev.carousel-item-end {    z-index: 1;    opacity: 1;  }  .active.carousel-item-start,  .active.carousel-item-end {    z-index: 0;    opacity: 0;    @include transition(opacity 0s $carousel-transition-duration);  }}//// Left/right controls for nav//.carousel-control-prev,.carousel-control-next {  position: absolute;  top: 0;  bottom: 0;  z-index: 1;  // Use flex for alignment (1-3)  display: flex; // 1. allow flex styles  align-items: center; // 2. vertically center contents  justify-content: center; // 3. horizontally center contents  width: $carousel-control-width;  padding: 0;  color: $carousel-control-color;  text-align: center;  background: none;  border: 0;  opacity: $carousel-control-opacity;  @include transition($carousel-control-transition);  // Hover/focus state  &:hover,  &:focus {    color: $carousel-control-color;    text-decoration: none;    outline: 0;    opacity: $carousel-control-hover-opacity;  }}.carousel-control-prev {  left: 0;  background-image: if($enable-gradients, linear-gradient(90deg, rgba($black, .25), rgba($black, .001)), null);}.carousel-control-next {  right: 0;  background-image: if($enable-gradients, linear-gradient(270deg, rgba($black, .25), rgba($black, .001)), null);}// Icons for within.carousel-control-prev-icon,.carousel-control-next-icon {  display: inline-block;  width: $carousel-control-icon-width;  height: $carousel-control-icon-width;  background-repeat: no-repeat;  background-position: 50%;  background-size: 100% 100%;}/* rtl:options: {  "autoRename": true,  "stringMap":[ {    "name"    : "prev-next",    "search"  : "prev",    "replace" : "next"  } ]} */.carousel-control-prev-icon {  background-image: escape-svg($carousel-control-prev-icon-bg);}.carousel-control-next-icon {  background-image: escape-svg($carousel-control-next-icon-bg);}// Optional indicator pips/controls//// Add a container (such as a list) with the following class and add an item (ideally a focusable control,// like a button) with data-bs-target for each slide your carousel holds..carousel-indicators {  position: absolute;  right: 0;  bottom: 0;  left: 0;  z-index: 2;  display: flex;  justify-content: center;  padding: 0;  // Use the .carousel-control's width as margin so we don't overlay those  margin-right: $carousel-control-width;  margin-bottom: 1rem;  margin-left: $carousel-control-width;  list-style: none;  [data-bs-target] {    box-sizing: content-box;    flex: 0 1 auto;    width: $carousel-indicator-width;    height: $carousel-indicator-height;    padding: 0;    margin-right: $carousel-indicator-spacer;    margin-left: $carousel-indicator-spacer;    text-indent: -999px;    cursor: pointer;    background-color: $carousel-indicator-active-bg;    background-clip: padding-box;    border: 0;    // Use transparent borders to increase the hit area by 10px on top and bottom.    border-top: $carousel-indicator-hit-area-height solid transparent;    border-bottom: $carousel-indicator-hit-area-height solid transparent;    opacity: $carousel-indicator-opacity;    @include transition($carousel-indicator-transition);  }  .active {    opacity: $carousel-indicator-active-opacity;  }}// Optional captions////.carousel-caption {  position: absolute;  right: (100% - $carousel-caption-width) * .5;  bottom: $carousel-caption-spacer;  left: (100% - $carousel-caption-width) * .5;  padding-top: $carousel-caption-padding-y;  padding-bottom: $carousel-caption-padding-y;  color: $carousel-caption-color;  text-align: center;}// Dark mode carousel.carousel-dark {  .carousel-control-prev-icon,  .carousel-control-next-icon {    filter: $carousel-dark-control-icon-filter;  }  .carousel-indicators [data-bs-target] {    background-color: $carousel-dark-indicator-active-bg;  }  .carousel-caption {    color: $carousel-dark-caption-color;  }}.carousel {  position: relative;}.carousel.pointer-event {  -ms-touch-action: pan-y;  touch-action: pan-y;}.carousel-inner {  position: relative;  width: 100%;  overflow: hidden;}.carousel-inner::after {  display: block;  clear: both;  content: '';}.carousel-item {  position: relative;  display: none;  float: left;  width: 100%;  margin-right: -100%;  -webkit-backface-visibility: hidden;  backface-visibility: hidden;  transition: -webkit-transform 0.6s ease-in-out;  transition: transform 0.6s ease-in-out;  transition: transform 0.6s ease-in-out, -webkit-transform 0.6s ease-in-out;}@media (prefers-reduced-motion: reduce) {  .carousel-item {    transition: none;  }}.carousel-item.active,.carousel-item-next,.carousel-item-prev {  display: block;}.carousel-item-next:not(.carousel-item-left),.active.carousel-item-right {  -webkit-transform: translateX(100%);  transform: translateX(100%);}.carousel-item-prev:not(.carousel-item-right),.active.carousel-item-left {  -webkit-transform: translateX(-100%);  transform: translateX(-100%);}.carousel-fade .carousel-item {  opacity: 0;  transition-property: opacity;  -webkit-transform: none;  transform: none;}.carousel-fade .carousel-item.active,.carousel-fade .carousel-item-next.carousel-item-left,.carousel-fade .carousel-item-prev.carousel-item-right {  z-index: 1;  opacity: 1;}.carousel-fade .active.carousel-item-left,.carousel-fade .active.carousel-item-right {  z-index: 0;  opacity: 0;  transition: 0s 0.6s opacity;}@media (prefers-reduced-motion: reduce) {  .carousel-fade .active.carousel-item-left,  .carousel-fade .active.carousel-item-right {    transition: none;  }}.carousel-control-prev,.carousel-control-next {  position: absolute;  top: 0;  bottom: 0;  z-index: 1;  display: -ms-flexbox;  display: flex;  -ms-flex-align: center;  align-items: center;  -ms-flex-pack: center;  justify-content: center;  width: 15%;  color: #fff;  text-align: center;  opacity: 0.5;  transition: opacity 0.15s ease;}@media (prefers-reduced-motion: reduce) {  .carousel-control-prev,  .carousel-control-next {    transition: none;  }}.carousel-control-prev:hover,.carousel-control-prev:focus,.carousel-control-next:hover,.carousel-control-next:focus {  color: #fff;  text-decoration: none;  outline: 0;  opacity: 0.9;}.carousel-control-prev {  left: 0;}.carousel-control-next {  right: 0;}.carousel-control-prev-icon,.carousel-control-next-icon {  display: inline-block;  width: 20px;  height: 20px;  background: no-repeat 50% / 100% 100%;}.carousel-control-prev-icon {  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3e%3c/svg%3e");}.carousel-control-next-icon {  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='%23fff' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3e%3c/svg%3e");}.carousel-indicators {  position: absolute;  right: 0;  bottom: 0;  left: 0;  z-index: 15;  display: -ms-flexbox;  display: flex;  -ms-flex-pack: center;  justify-content: center;  padding-left: 0;  margin-right: 15%;  margin-left: 15%;  list-style: none;}.carousel-indicators button {  box-sizing: content-box;  -ms-flex: 0 1 auto;  flex: 0 1 auto;  width: 30px;  height: 3px;  margin-right: 3px;  margin-left: 3px;  text-indent: -999px;  cursor: pointer;  background-color: #fff;  background-clip: padding-box;  border-top: 10px solid transparent;  border-bottom: 10px solid transparent;  opacity: 0.5;  transition: opacity 0.6s ease;}@media (prefers-reduced-motion: reduce) {  .carousel-indicators button {    transition: none;  }}.carousel-indicators .active {  opacity: 1;}.carousel-caption {  position: absolute;  right: 15%;  bottom: 20px;  left: 15%;  z-index: 10;  padding-top: 20px;  padding-bottom: 20px;  color: #fff;  text-align: center;}